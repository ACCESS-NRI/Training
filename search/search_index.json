{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"NRI training resources","text":"<p>This documentation site lists training resources developed or recommended by the ACCESS-NRI.</p> <p>The documentation is distributed under a CC-BY 4.0 license.</p>"},{"location":"LICENSE/","title":"License","text":"<p>All documentation material from the ACCESS-NRI is made available under the Creative Commons Attribution license. The following is a human-readable summary of (and not a substitute for) the full legal text of the CC BY 4.0 license.</p> <p>You are free:</p> <ul> <li>to Share---copy and redistribute the material in any medium or format</li> <li>to Adapt---remix, transform, and build upon the material</li> </ul> <p>for any purpose, even commercially.</p> <p>The licensor cannot revoke these freedoms as long as you follow the license terms.</p> <p>Under the following terms:</p> <ul> <li>Attribution---You must give appropriate credit (mentioning that   your work is derived from work that is Copyright \u00a9 ACCESS-NRI and, where practical, linking to   https://www.access-nri.org.au, provide a link to the   license, and indicate if changes were made. You may do   so in any reasonable manner, but not in any way that suggests the   licensor endorses you or your use.</li> </ul> <p>No additional restrictions---You may not apply legal terms or technological measures that legally restrict others from doing anything the license permits.  With the understanding that:</p> <p>Notices:</p> <ul> <li>You do not have to comply with the license for elements of the   material in the public domain or where your use is permitted by an   applicable exception or limitation.</li> <li>No warranties are given. The license may not give you all of the   permissions necessary for your intended use. For example, other   rights such as publicity, privacy, or moral rights may limit how you   use the material.</li> </ul>"},{"location":"HowTos/GitAndGitHub/","title":"Git and GitHub how-to","text":"<p>Git is the industry standard for version control. Numerous tools have been developed to support code management using Git. These tools make it faster and more user-friendly to manage code using industry's best practice. As such, knowing to use Git is very valuable to anyone developing code.</p> <p>GitHub is a code hosting platform for version control and collaboration. Using GitHub or other similar platforms with Git for your code development allows you to safely back up your code and to open your work to collaboration.</p> <p>This how-to focuses on using both Git and GitHub together for code development and collaboration.</p> <p>The Basics section gives generic information on how to use Git and GitHub.</p> <p>The GitHub setup section gives information on the setup for GitHub recommended by ACCESS-NRI.</p>"},{"location":"HowTos/GitAndGitHub/basics/","title":"Basics","text":""},{"location":"HowTos/GitAndGitHub/basics/#a-quick-introduction","title":"A quick introduction","text":"<p>A quick introduction of using Git and GitHub showing how to record your work with Git and connect with GitHub. </p>"},{"location":"HowTos/GitAndGitHub/basics/#a-typical-gitgithub-workflow","title":"A typical Git/GitHub workflow","text":"<p>A short video presenting a typical Git/GitHub workflow based on the most used Git commands.</p>"},{"location":"HowTos/GitAndGitHub/basics/#github-quickstart-guide","title":"GitHub Quickstart guide","text":"<p>Despite its name, this Quickstart guide contains a lot of information about Git and GitHub. To go to the essential only:</p> <ul> <li>Learn how to edit files directly on GitHub</li> <li>Learn how to set up SSH authentification</li> <li>Learn about pull requests. It includes information about the text formatting used on GitHub, Markdown.</li> <li>Learn how to work with code reviews on GitHub</li> </ul>"},{"location":"HowTos/GitAndGitHub/basics/#official-git-documentation","title":"Official Git Documentation","text":"<p>Git User Manual</p>"},{"location":"HowTos/GitAndGitHub/basics/#cheatsheets","title":"Cheatsheets","text":"<p>Git cheatsheet</p> <p>Git cheatsheet for SVN users</p> <p>Git cheatsheet for advanced users</p>"},{"location":"HowTos/GitAndGitHub/basics/#graphical-clients-and-ide","title":"Graphical clients and IDE","text":"<p>Interacting with Git can be a lot easier through GUIs or an Integrated Development Environment (IDE) rather than remembering a list of commands for the command-line.</p> <p>VS Code: the best Integrated Development Environment (IDE) tool currently. It includes full coding support for about all coding languages, including Fortran. It integrates with Git, GitHub, BitBucket and GitLab through various extensions.</p> <p>SourceTree: A free powerful GUI for Git on Mac and Windows. </p> <p>Other GUIs: A list of GUIs for Git from the Git documentation.</p>"},{"location":"HowTos/GitAndGitHub/git_setup/","title":"Git setup","text":"<p>Git has many configuration options. This section covers some of the basic options that are recommended.  Make sure you set these configuration options on every machine you routinely use, including remote servers such as HPCs.</p>"},{"location":"HowTos/GitAndGitHub/git_setup/#configure-name-and-email","title":"Configure name and email","text":"<p>All commits on git have information about the author with the name and email address. Before any work with Git, you should configure them globally for each machine you use. See the GitHub documentation to guide you through it.</p>"},{"location":"HowTos/GitAndGitHub/git_setup/#configure-auto-remote","title":"Configure auto-remote","text":"<p>When working collaboratively with git, you will need to synchronise your work between your local work area and a remote repository. To remove the need to manually set up the remote connection for each branch, you can set this configuration option:</p> <pre><code>$ git config --global --add push.autoSetupRemote true\n</code></pre>"},{"location":"HowTos/GitAndGitHub/github_setup/","title":"GitHub setup","text":"<p>We present here our recommended setup for GitHub.</p>"},{"location":"HowTos/GitAndGitHub/github_setup/#two-factor-authentication","title":"Two-factor authentication","text":"<p>We recommend to enable 2-factor authentication on your GitHub account for higher security. </p>"},{"location":"HowTos/GitAndGitHub/github_setup/#ssh-authentification","title":"SSH authentification","text":"<p>ACCESS users are used to SSH for connecting to NCI. We recommend setting up SSH keys for pulling from and pushing to GitHub repositories. Remember to set a passphrase for your key, do not use passphrase-less keys. Use SSH agent forwarding to securely forward ssh keys from your own machine to use them on NCI machines.</p>"},{"location":"HowTos/GitAndGitHub/github_setup/#commit-signature-verification","title":"Commit signature verification","text":"<p>It is trivially easy to impersonate another user when committing to git. This does not lead to elevated privileges, but could be exploited in a social hack, causing commits to be accepted based on an assumption of identity.</p> <p>Code signing gives others confidence that code commits come from a trusted source. Code signing is not required to contribute to ACCESSHub, but it is for contributing to most repositories in the ACCESS-NRI Organisation.</p> <p>GitHub is the code hosting platform used by ACCESS-NRI, and GitHub supports code signing. You know when a commit is correctly signed because the commit has a \"Verified\" badge:</p> <p></p>"},{"location":"HowTos/GitAndGitHub/github_setup/#signing-code-with-ssh-keys","title":"Signing code with SSH keys","text":"<p>Code signing with GPG has been supported for some time, but it is somewhat complicated to configure and places a burden to become familiar with and maintain GPG keys.</p> <p>Since version 2.34.0 git supports code signing with ssh keys. Most people are familiar with using ssh keys for ssh access, which makes configuring code signing more straightforward. </p> Info <p>git 2.37.3 is available as a module on gadi (<code>module load git/2.37.3</code>) </p> <p>First add your signing key to GitHub. Either use an existing SSH key, or create a new one.</p> <p>Make sure your key is on your keychain and then login to gadi with key forwarding. </p> Info <p>Adding a key to your ssh agent is platform dependent</p> <p>Apple OSX: </p> <pre><code>ssh-add --apple-use-keychain &lt;path to keychain&gt;\n</code></pre> <p>Linux: </p> <pre><code>ssh-add &lt;path to keychain&gt;\n</code></pre> <p>To automatically sign all commits and tags in all repositories with your ssh key:</p> <pre><code>git config --global commit.gpgsign true \ngit config --global tag.gpgsign true\n\ngit config --global gpg.format ssh \ngit config --global user.signingKey &lt;ssh public key signature&gt;\n</code></pre> Note <p>Ensure you use a modern enough version of git otherwise you will get errors if you try and sign commits </p>"},{"location":"HowTos/GitAndGitHub/github_setup/#resources","title":"Resources","text":"<p>https://blog.dbrgn.ch/2021/11/16/git-ssh-signatures/ </p> <p>https://docs.github.com/en/authentication/managing-commit-signature-verification/telling-git-about-your-signing-key#telling-git-about-your-ssh-key </p> <p>https://calebhearth.com/sign-git-with-ssh </p>"}]}