{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"NRI training resources This documentation site lists training resources developed or recommended by the ACCESS-NRI. The documentation is distributed under a CC-BY 4.0 license .","title":"NRI training resources"},{"location":"#nri-training-resources","text":"This documentation site lists training resources developed or recommended by the ACCESS-NRI. The documentation is distributed under a CC-BY 4.0 license .","title":"NRI training resources"},{"location":"LICENSE/","text":"All documentation material from the ACCESS-NRI is made available under the Creative Commons Attribution license . The following is a human-readable summary of (and not a substitute for) the full legal text of the CC BY 4.0 license . You are free: to Share ---copy and redistribute the material in any medium or format to Adapt ---remix, transform, and build upon the material for any purpose, even commercially. The licensor cannot revoke these freedoms as long as you follow the license terms. Under the following terms: Attribution ---You must give appropriate credit (mentioning that your work is derived from work that is Copyright \u00a9 ACCESS-NRI and, where practical, linking to https://www.access-nri.org.au/), provide a link to the license , and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use. No additional restrictions ---You may not apply legal terms or technological measures that legally restrict others from doing anything the license permits. With the understanding that: Notices: You do not have to comply with the license for elements of the material in the public domain or where your use is permitted by an applicable exception or limitation. No warranties are given. The license may not give you all of the permissions necessary for your intended use. For example, other rights such as publicity, privacy, or moral rights may limit how you use the material.","title":"License"},{"location":"HowTos/GitAndGitHub/","text":"Git and GitHub how-to Git is the industry standard for version control. Numerous tools have been developed to support code management using Git. These tools make it faster and more user-friendly to manage code using industry's best practice. As such, knowing to use Git is very valuable to anyone developing code. GitHub is a code hosting platform for version control and collaboration. Using GitHub or other similar platforms with Git for your code development allows you to safely back up your code and to open your work to collaboration. This how-to focuses on using both Git and GitHub together for code development and collaboration. The Basics section gives generic information on how to use Git and GitHub. The GitHub setup section gives information on the setup for GitHub recommended by ACCESS-NRI.","title":"Git and GitHub how-to"},{"location":"HowTos/GitAndGitHub/#git-and-github-how-to","text":"Git is the industry standard for version control. Numerous tools have been developed to support code management using Git. These tools make it faster and more user-friendly to manage code using industry's best practice. As such, knowing to use Git is very valuable to anyone developing code. GitHub is a code hosting platform for version control and collaboration. Using GitHub or other similar platforms with Git for your code development allows you to safely back up your code and to open your work to collaboration. This how-to focuses on using both Git and GitHub together for code development and collaboration. The Basics section gives generic information on how to use Git and GitHub. The GitHub setup section gives information on the setup for GitHub recommended by ACCESS-NRI.","title":"Git and GitHub how-to"},{"location":"HowTos/GitAndGitHub/basics/","text":"A quick introduction A quick introduction of using Git and GitHub showing how to record your work with Git and connect with GitHub. A typical Git/GitHub workflow A short video presenting a typical Git/GitHub workflow based on the most used Git commands. GitHub Quickstart guide Despite its name, this Quickstart guide contains a lot of information about Git and GitHub. To go to the essential only: Learn how to edit files directly on GitHub Learn how to set up SSH authentification Learn about pull requests . It includes information about the text formatting used on GitHub, Markdown. Learn how to work with code reviews on GitHub Official Git Documentation Git User Manual Cheatsheets Git cheatsheet Git cheatsheet for SVN users Git cheatsheet for advanced users Graphical clients and IDE Interacting with Git can be a lot easier through GUIs or an Integrated Development Environment (IDE) rather than remembering a list of commands for the command-line. VS Code : the best Integrated Development Environment (IDE) tool currently. It includes full coding support for about all coding languages, including Fortran. It integrates with Git, GitHub, BitBucket and GitLab through various extensions. SourceTree : A free powerful GUI for Git on Mac and Windows. Other GUIs : A list of GUIs for Git from the Git documentation.","title":"Basics"},{"location":"HowTos/GitAndGitHub/basics/#a-quick-introduction","text":"A quick introduction of using Git and GitHub showing how to record your work with Git and connect with GitHub.","title":"A quick introduction"},{"location":"HowTos/GitAndGitHub/basics/#a-typical-gitgithub-workflow","text":"A short video presenting a typical Git/GitHub workflow based on the most used Git commands.","title":"A typical Git/GitHub workflow"},{"location":"HowTos/GitAndGitHub/basics/#github-quickstart-guide","text":"Despite its name, this Quickstart guide contains a lot of information about Git and GitHub. To go to the essential only: Learn how to edit files directly on GitHub Learn how to set up SSH authentification Learn about pull requests . It includes information about the text formatting used on GitHub, Markdown. Learn how to work with code reviews on GitHub","title":"GitHub Quickstart guide"},{"location":"HowTos/GitAndGitHub/basics/#official-git-documentation","text":"Git User Manual","title":"Official Git Documentation"},{"location":"HowTos/GitAndGitHub/basics/#cheatsheets","text":"Git cheatsheet Git cheatsheet for SVN users Git cheatsheet for advanced users","title":"Cheatsheets"},{"location":"HowTos/GitAndGitHub/basics/#graphical-clients-and-ide","text":"Interacting with Git can be a lot easier through GUIs or an Integrated Development Environment (IDE) rather than remembering a list of commands for the command-line. VS Code : the best Integrated Development Environment (IDE) tool currently. It includes full coding support for about all coding languages, including Fortran. It integrates with Git, GitHub, BitBucket and GitLab through various extensions. SourceTree : A free powerful GUI for Git on Mac and Windows. Other GUIs : A list of GUIs for Git from the Git documentation.","title":"Graphical clients and IDE"},{"location":"HowTos/GitAndGitHub/github_setup/","text":"GitHub setup We present here our recommended setup for GitHub. Two-factor authentication We recommend to enable 2-factor authentication on your GitHub account for higher security. SSH authentification ACCESS users are used to SSH for connecting to NCI. We recommend setting up SSH keys for pulling from and pushing to GitHub repositories. Remember to set a passphrase for your key, do not use passphrase-less keys. Use SSH agent forwarding to securely forward ssh keys from your own machine to use them on NCI machines. Commit signature verification It is trivially easy to impersonate another user when committing to git. This does not lead to elevated privileges, but could be exploited in a social hack, causing commits to be accepted based on an assumption of identity. Code signing gives others confidence that code commits come from a trusted source . Code signing is not required to contribute to ACCESSHub, but it is for contributing to most repositories in the ACCESS-NRI Organisation . GitHub is the code hosting platform used by ACCESS-NRI, and GitHub supports code signing. You know when a commit is correctly signed because the commit has a \"Verified\" badge: Signing code with SSH keys Code signing with GPG has been supported for some time, but it is somewhat complicated to configure and places a burden to become familiar with and maintain GPG keys. Since version 2.34.0 git supports code signing with ssh keys. Most people are familiar with using ssh keys for ssh access, which makes configuring code signing more straightforward. Info git 2.37.3 is available as a module on gadi ( module load git/2.37.3 ) First add your signing key to GitHub . Either use an existing SSH key, or create a new one. Make sure your key is on your keychain and then login to gadi with key forwarding. Info Adding a key to your ssh agent is platform dependent Apple OSX: ssh-add --apple-use-keychain <path to keychain> Linux : ssh-add <path to keychain> To automatically sign all commits and tags in all repositories with your ssh key: git config --global commit.gpgsign true git config --global tag.gpgsign true git config --global gpg.format ssh git config --global user.signingKey <ssh public key signature> Note Ensure you use a modern enough version of git otherwise you will get errors if you try and sign commits Resources https://blog.dbrgn.ch/2021/11/16/git-ssh-signatures/ https://docs.github.com/en/authentication/managing-commit-signature-verification/telling-git-about-your-signing-key#telling-git-about-your-ssh-key https://calebhearth.com/sign-git-with-ssh","title":"GitHub setup"},{"location":"HowTos/GitAndGitHub/github_setup/#github-setup","text":"We present here our recommended setup for GitHub.","title":"GitHub setup"},{"location":"HowTos/GitAndGitHub/github_setup/#two-factor-authentication","text":"We recommend to enable 2-factor authentication on your GitHub account for higher security.","title":"Two-factor authentication"},{"location":"HowTos/GitAndGitHub/github_setup/#ssh-authentification","text":"ACCESS users are used to SSH for connecting to NCI. We recommend setting up SSH keys for pulling from and pushing to GitHub repositories. Remember to set a passphrase for your key, do not use passphrase-less keys. Use SSH agent forwarding to securely forward ssh keys from your own machine to use them on NCI machines.","title":"SSH authentification"},{"location":"HowTos/GitAndGitHub/github_setup/#commit-signature-verification","text":"It is trivially easy to impersonate another user when committing to git. This does not lead to elevated privileges, but could be exploited in a social hack, causing commits to be accepted based on an assumption of identity. Code signing gives others confidence that code commits come from a trusted source . Code signing is not required to contribute to ACCESSHub, but it is for contributing to most repositories in the ACCESS-NRI Organisation . GitHub is the code hosting platform used by ACCESS-NRI, and GitHub supports code signing. You know when a commit is correctly signed because the commit has a \"Verified\" badge:","title":"Commit signature verification"},{"location":"HowTos/GitAndGitHub/github_setup/#signing-code-with-ssh-keys","text":"Code signing with GPG has been supported for some time, but it is somewhat complicated to configure and places a burden to become familiar with and maintain GPG keys. Since version 2.34.0 git supports code signing with ssh keys. Most people are familiar with using ssh keys for ssh access, which makes configuring code signing more straightforward. Info git 2.37.3 is available as a module on gadi ( module load git/2.37.3 ) First add your signing key to GitHub . Either use an existing SSH key, or create a new one. Make sure your key is on your keychain and then login to gadi with key forwarding. Info Adding a key to your ssh agent is platform dependent Apple OSX: ssh-add --apple-use-keychain <path to keychain> Linux : ssh-add <path to keychain> To automatically sign all commits and tags in all repositories with your ssh key: git config --global commit.gpgsign true git config --global tag.gpgsign true git config --global gpg.format ssh git config --global user.signingKey <ssh public key signature> Note Ensure you use a modern enough version of git otherwise you will get errors if you try and sign commits","title":"Signing code with SSH keys"},{"location":"HowTos/GitAndGitHub/github_setup/#resources","text":"https://blog.dbrgn.ch/2021/11/16/git-ssh-signatures/ https://docs.github.com/en/authentication/managing-commit-signature-verification/telling-git-about-your-signing-key#telling-git-about-your-ssh-key https://calebhearth.com/sign-git-with-ssh","title":"Resources"}]}